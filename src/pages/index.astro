---
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

import { Button } from '@/components/ui/button';
import ThemeLayout from '@/layouts/ThemeLayout.astro';
---

<ThemeLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <!-- <h1 class="text-accent-400">üßë‚ÄçüöÄ Hello, Astronaut!</h1>

  <Button client:load className="bg-accent-400" children="Click me" /> -->

  <div class="mt-12 flex flex-col justify-center gap-4 max-w-[1000px] mx-auto">
    <div class="w-full bg-pageBg p-4 flex gap-4 border-b border-cardBg">
      <a href="">
        <p class="text-gray-500">21 December 2022</p>
        <h2 class="text-2xl text-white font-bold hover:text-accent-400 transition-colors">
          Mastering Clean Code: Essential Practices for Developers
        </h2>
        <p class="text-gray-500 my-2">
          Clean code is the cornerstone of every successful software project. As a developer, your ability to write
          clean, maintainable code is crucial for the efficiency and longevity of your applications. In this article,
          we'll delve into ten examples of good and bad coding practices in JavaScript, highlighting the importance of
          writing clean code and providing actionable insights to help you level up your development skills.
        </p>

        <div>
          <p class="text-accent-400">#React #Next #Typescript</p>
        </div>
      </a>
    </div>

    <div class="w-full bg-pageBg p-4 flex gap-4 border-b border-cardBg">
      <div>
        <p class="text-gray-500">21 December 2022</p>
        <h2 class="text-2xl text-white font-bold">Mastering Clean Code: Essential Practices for Developers</h2>
        <p class="text-gray-500 my-2">
          Clean code is the cornerstone of every successful software project. As a developer, your ability to write
          clean, maintainable code is crucial for the efficiency and longevity of your applications. In this article,
          we'll delve into ten examples of good and bad coding practices in JavaScript, highlighting the importance of
          writing clean code and providing actionable insights to help you level up your development skills.
        </p>

        <div>
          <p class="text-accent-400">#React #Next #Typescript</p>
        </div>
      </div>
    </div>

    <div class="w-full bg-pageBg p-4 flex gap-4 border-b border-cardBg">
      <div>
        <p class="text-gray-500">21 December 2022</p>
        <h2 class="text-2xl text-white font-bold">Mastering Clean Code: Essential Practices for Developers</h2>
        <p class="text-gray-500 my-2">
          Clean code is the cornerstone of every successful software project. As a developer, your ability to write
          clean, maintainable code is crucial for the efficiency and longevity of your applications. In this article,
          we'll delve into ten examples of good and bad coding practices in JavaScript, highlighting the importance of
          writing clean code and providing actionable insights to help you level up your development skills.
        </p>

        <div>
          <p class="text-accent-400">#React #Next #Typescript</p>
        </div>
      </div>
    </div>

    <div class="w-full bg-pageBg p-4 flex gap-4 border-b border-cardBg">
      <div>
        <p class="text-gray-500">21 December 2022</p>
        <h2 class="text-2xl text-white font-bold">Mastering Clean Code: Essential Practices for Developers</h2>
        <p class="text-gray-500 my-2">
          Clean code is the cornerstone of every successful software project. As a developer, your ability to write
          clean, maintainable code is crucial for the efficiency and longevity of your applications. In this article,
          we'll delve into ten examples of good and bad coding practices in JavaScript, highlighting the importance of
          writing clean code and providing actionable insights to help you level up your development skills.
        </p>

        <div>
          <p class="text-accent-400">#React #Next #Typescript</p>
        </div>
      </div>
    </div>
  </div>
</ThemeLayout>
